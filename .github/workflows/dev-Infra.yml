name: "Terraform Workflow"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    runs-on: ubuntu-latest   # use self-hosted if you want
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          # client-secret: ${{ secrets.AZURE_SECRET_NONPROD }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5   # or your version

      - name: Terraform Init
        id: init
        run: terraform init -input=false
        working-directory: ./environments/dev

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./environments/dev

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out=tfplan
        working-directory: ./environments/dev

      - name: Save Plan as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ./environments/dev/tfplan

    #   - name: Post Plan to PR
    #     if: github.event_name == 'pull_request'
    #     uses: marocchino/sticky-pull-request-comment@v2
    #     with:
    #       header: terraform-plan
    #       message: |
    #         ## Terraform Plan Result
    #         ${{ steps.plan.outputs.stdout }}

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          # client-secret: ${{ secrets.AZURE_SECRET_NONPROD }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Download Plan Artifact
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: ./environments/dev

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ./environments/dev

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./environments/dev
